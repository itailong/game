package com.starland.xyqp.lobby.controller;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.starland.xyqp.lobby.domain.FightDetail;
import com.starland.xyqp.lobby.domain.FightExploits;
import com.starland.xyqp.lobby.domain.User;
import com.starland.xyqp.lobby.service.FightDetailService;
import com.starland.xyqp.lobby.service.FightExploitsService;
import com.starland.xyqp.lobby.service.UserService;
import com.starland.xyqp.lobby.vo.AjaxResponse;

@Controller
@RequestMapping("fightExploits/")
public class FightExploitsController {
	
	@Resource
	private UserService userService;

	@Resource
	private FightExploitsService fightExploitsService;
	
	@Resource
	private FightDetailService fightDetailService;
	
	@ResponseBody
	@RequestMapping("list")
	public Object list(@RequestParam("token") String token, @RequestParam("gameType") String gameType) {
		User user = userService.getByToken(token);
		if (null == user) {
			return new AjaxResponse(501, "token错误！");
		}
		List<FightExploits> list = fightExploitsService.findByUserId(user.getId(), gameType);
		if (!list.isEmpty()) {
			Integer[] ids = new Integer[list.size()];
			for (int i = 0; i < list.size(); i++) {
				ids[i] = list.get(i).getId();
			}
			List<FightDetail> details = fightDetailService.findByExploitsIds(ids);
			for (FightDetail fightDetail : details) {
				Integer exploitsId = fightDetail.getExploitsId();
				for (FightExploits fightExploits : list) {
					List<FightDetail> fightDetails = fightExploits.getFightDetails();
					if (null == fightDetails) {
						fightDetails = new ArrayList<>();
						fightExploits.setFightDetails(fightDetails);
					}
					if (fightExploits.getId().equals(exploitsId)) {
						fightDetails.add(fightDetail);
					}
				}
			}
		}
		return new AjaxResponse(list);
	}
	
	@ResponseBody
	@RequestMapping("listAll")
	public Object listAll(@RequestParam("token") String token) {
		User user = userService.getByToken(token);
		if (null == user) {
			return new AjaxResponse(501, "token错误！");
		}
		List<FightExploits> list = fightExploitsService.findAllByUserId(user.getId());
		if (!list.isEmpty()) {
			Integer[] ids = new Integer[list.size()];
			for (int i = 0; i < list.size(); i++) {
				ids[i] = list.get(i).getId();
			}
			List<FightDetail> details = fightDetailService.findByExploitsIds(ids);
			for (FightDetail fightDetail : details) {
				Integer exploitsId = fightDetail.getExploitsId();
				for (FightExploits fightExploits : list) {
					List<FightDetail> fightDetails = fightExploits.getFightDetails();
					if (null == fightDetails) {
						fightDetails = new ArrayList<>();
						fightExploits.setFightDetails(fightDetails);
					}
					if (fightExploits.getId().equals(exploitsId)) {
						fightDetails.add(fightDetail);
					}
				}
			}
		}
		return new AjaxResponse(list);
	}
	
}
